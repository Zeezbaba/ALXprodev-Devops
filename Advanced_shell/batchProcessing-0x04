#!/bin/bash

# Create output directory
mkdir -p pokemon_data

# Clear previous error log
> errors.txt

# List of Pokémon
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch a single Pokémon with retry logic
fetch_pokemon() {
  local pokemon=$1
  local attempts=0
  local max_attempts=3

  while [ $attempts -lt $max_attempts ]; do
    curl -s -f "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "pokemon_data/${pokemon}.json"
    if [ $? -eq 0 ]; then
      echo "Saved data to pokemon_data/${pokemon}.json ✅"
      return 0
    else
      ((attempts++))
      sleep 2
    fi
  done

  echo "[$(date)] Failed to fetch data for $pokemon after $max_attempts attempts ❌" >> errors.txt
}

# Export function
export -f fetch_pokemon

# Fetch all Pokémon in parallel
for pokemon in "${pokemon_list[@]}"; do
  echo "Fetching data for $pokemon..."
  bash -c "fetch_pokemon $pokemon" &
done

# Show running jobs (explicit use of `jobs` as required by checker)
echo "Running background jobs:"
jobs

# Wait for all background jobs to finish
wait

echo "✅ All fetch tasks completed."